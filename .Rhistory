mrg[mrg$mean.x < mrg$mean.y,]
bye
setwd("/Users/harridw/Development/Coursera/Course5/Course-5-Storm-Data")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
### Package Usage
packages <- c("plyr", "dplyr", "data.table", "dtplyr", "lubridate", "ggplot2", "scales",
"reshape2", "knitr", "R.cache", "stringr", "gtools", "quantreg")
ipak(packages)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
### Package Usage
packages <- c("plyr", "dplyr", "data.table", "dtplyr", "lubridate", "ggplot2", "scales",
"reshape2", "knitr", "R.cache", "stringr", "gtools", "quantreg")
ipak(packages)
StormData <- read.csv("repdata-data-StormData.csv.bz2", header = TRUE, sep = ",",
quote = "\"", dec = ".")
StormData$BGN_DATE <- as.Date(StormData$BGN_DATE, "%m/%d/%Y")
StormData$BGN_YEAR <- format(StormData$BGN_DATE, "%Y")
StormData$hour <- as.numeric(substr(StormData$BGN_TIME, 1, 2))
StormData$minute <- substr(StormData$BGN_TIME, 3, 4)
StormData$ampm <- ifelse(StormData$hour > 12, "PM", "AM")
StormData$hour <- ifelse(StormData$hour > 12, StormData$hour - 12,
ifelse(StormData$hour < 1, 12, StormData$hour))
StormData$hour <- substr(paste("00", StormData$hour, sep = ""),
min(length(StormData$hour)+1,3),min(length(StormData$hour)+2, 4))
StormData$BGN_TIME <- paste(StormData$hour, ":", StormData$minute, " ",
StormData$ampm, sep = "")
subStormData <- select(StormData, REFNUM, BGN_YEAR, BGN_DATE, BGN_TIME, TIME_ZONE,
STATE, COUNTYNAME, LATITUDE, LONGITUDE, EVTYPE, F, MAG,
FATALITIES, INJURIES, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
subStormData <- subset(subStormData, BGN_YEAR > "1989")
subStormData <- subStormData[order(subStormData$STATE, subStormData$COUNTYNAME,
subStormData$EVTYPE, subStormData$BGN_DATE),]
subStormData$PROPDMG <- subStormData$PROPDMG * ifelse(subStormData$PROPDMGEXP
%in% c("h","H"), 100,
ifelse(subStormData$PROPDMGEXP %in% c("k", "K"), 1000,
ifelse(subStormData$PROPDMGEXP %in% c("m", "M"), 1000000,
ifelse(subStormData$PROPDMGEXP %in% c("b", "B"), 1000000000, 1))))
subStormData$CROPDMG <- subStormData$CROPDMG * ifelse(subStormData$CROPDMGEXP
%in% c("h","H"), 100,
ifelse(subStormData$CROPDMGEXP %in% c("k", "K"), 1000,
ifelse(subStormData$CROPDMGEXP %in% c("m", "M"), 1000000,
ifelse(subStormData$CROPDMGEXP %in% c("b", "B"), 1000000000, 1))))
subStormData$TTLDMG <- subStormData$PROPDMG + subStormData$CROPDMG
subStormData <- select(subStormData, -c(PROPDMGEXP, CROPDMGEXP))
subStormData$EVENT_TYPE <- ifelse(grepl("TORNADO", subStormData$EVTYPE,
ignore.case = TRUE), "Tornado",
ifelse(grepl("TYPHOON", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane(Typhoon)",
ifelse(grepl("HURRICAN", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane",
ifelse(grepl("TSUNAMI", subStormData$EVTYPE,
ignore.case = TRUE), "Tsunami",
ifelse(grepl("FUNNEL", subStormData$EVTYPE,
ignore.case = TRUE), "Funnel Cloud",
ifelse(grepl("AVALANCHE", subStormData$EVTYPE,
ignore.case = TRUE), "Avalanche",
ifelse(grepl("BLIZZARD", subStormData$EVTYPE,
ignore.case = TRUE), "Blizzard",
ifelse(grepl("MARINE HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Hail",
ifelse(grepl("MARINE HIGH WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine High Wind",
ifelse(grepl("MARINE STRONG WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Strong Wind",
ifelse(grepl("MARUNE THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Thunderstorm Wind",
ifelse(grepl("THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("TSTM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "HAIL",
ifelse(grepl("EXTREME COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold / Wind Chill",
ifelse(grepl("EXTREME WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold / Wind Chill",
ifelse(grepl("COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Cold / Wind Chill",
ifelse(grepl("WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Cold / Wind Chill",
ifelse(grepl("FOG", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("FREEZ", subStormData$EVTYPE,
ignore.case = TRUE), "Freezing Fog",
"Dense Fog"),
ifelse(grepl("FLOOD", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lakeshore Flood",
ifelse(grepl("FLASH", subStormData$EVTYPE,
ignore.case = TRUE), "Flash Flood",
ifelse(grepl("COASTAL", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SHORE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
"Flood")))),
ifelse(grepl("FIRE", subStormData$EVTYPE,
ignore.case = TRUE), "Wildfire",
ifelse(grepl("DROUGHT", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("DRY", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("HEAT", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("EXCESSIVE", subStormData$EVTYPE,
ignore.case = TRUE), "Excessive Heat",
"Heat"),
ifelse(grepl("LIGHTNING", subStormData$EVTYPE,
ignore.case = TRUE), "Lightning",
ifelse(grepl("SNOW", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lake-effect Snow",
ifelse(grepl("HEAVY", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Snow",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("ICE", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
"Winter Storm"))))),
ifelse(grepl("HOT", subStormData$EVTYPE,
ignore.case = TRUE), "HEAT",
ifelse(grepl("DUST", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("DEVIL", subStormData$EVTYPE,
ignore.case = TRUE), "Dust Devil",
"Dust Storm"),
ifelse(grepl("FROST", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("FREEZE", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("ICE ROADS", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("VOLCANIC", subStormData$EVTYPE,
ignore.case = TRUE), "Volcanic Ash",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("WET", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("MICROBURST", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
ifelse(grepl("Wind", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("HIGH", subStormData$EVTYPE,
ignore.case = TRUE), "High Wind",
ifelse(grepl("STRONG", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
"High Wind")),
ifelse(grepl("PRECIPITATION", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("FLD", subStormData$EVTYPE,
ignore.case = TRUE), "Flood",
ifelse(grepl("ASTRONOMICAL LOW TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Astronomical Low Tide",
ifelse(grepl("ASTRONOMICAL HIGH TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SURGE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
"Other Event")))))))))))))))))))))))))))))))))))))))))))
events1 <- subset(subStormData, EVENT_TYPE == "Other Event")
unique(events1$EVTYPE)
subStormData$EVENT_TYPE <- ifelse(grepl("TORNADO", subStormData$EVTYPE,
ignore.case = TRUE), "Tornado",
ifelse(grepl("TYPHOON", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane(Typhoon)",
ifelse(grepl("HURRICAN", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane",
ifelse(grepl("TSUNAMI", subStormData$EVTYPE,
ignore.case = TRUE), "Tsunami",
ifelse(grepl("FUNNEL", subStormData$EVTYPE,
ignore.case = TRUE), "Funnel Cloud",
ifelse(grepl("AVALANCHE", subStormData$EVTYPE,
ignore.case = TRUE), "Avalanche",
ifelse(grepl("BLIZZARD", subStormData$EVTYPE,
ignore.case = TRUE), "Blizzard",
ifelse(grepl("MARINE HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Hail",
ifelse(grepl("MARINE HIGH WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine High Wind",
ifelse(grepl("MARINE STRONG WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Strong Wind",
ifelse(grepl("MARUNE THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Thunderstorm Wind",
ifelse(grepl("THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("TSTM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "HAIL",
ifelse(grepl("EXTREME COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold/Wind Chill",
ifelse(grepl("EXTREME WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold/Wind Chill",
ifelse(grepl("COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("FOG", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("FREEZ", subStormData$EVTYPE,
ignore.case = TRUE), "Freezing Fog",
"Dense Fog"),
ifelse(grepl("FLOOD", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lakeshore Flood",
ifelse(grepl("FLASH", subStormData$EVTYPE,
ignore.case = TRUE), "Flash Flood",
ifelse(grepl("COASTAL", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SHORE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
"Flood")))),
ifelse(grepl("FIRE", subStormData$EVTYPE,
ignore.case = TRUE), "Wildfire",
ifelse(grepl("DROUGHT", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("DRY", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("HEAT", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("EXCESSIVE", subStormData$EVTYPE,
ignore.case = TRUE), "Excessive Heat",
"Heat"),
ifelse(grepl("LIGHTNING", subStormData$EVTYPE,
ignore.case = TRUE), "Lightning",
ifelse(grepl("SNOW", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lake-effect Snow",
ifelse(grepl("HEAVY", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Snow",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("ICE", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
"Winter Storm"))))),
ifelse(grepl("HOT", subStormData$EVTYPE,
ignore.case = TRUE), "HEAT",
ifelse(grepl("DUST", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("DEVIL", subStormData$EVTYPE,
ignore.case = TRUE), "Dust Devil",
"Dust Storm"),
ifelse(grepl("FROST", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("FREEZE", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("ICE ROADS", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("VOLCANIC", subStormData$EVTYPE,
ignore.case = TRUE), "Volcanic Ash",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("WET", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("MICROBURST", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
ifelse(grepl("Wind", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("HIGH", subStormData$EVTYPE,
ignore.case = TRUE), "High Wind",
ifelse(grepl("STRONG", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
"High Wind")),
ifelse(grepl("PRECIPITATION", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("FLD", subStormData$EVTYPE,
ignore.case = TRUE), "Flood",
ifelse(grepl("ASTRONOMICAL LOW TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Astronomical Low Tide",
ifelse(grepl("ASTRONOMICAL HIGH TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SURGE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("EROSION", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("FREEZING DRIZZLE", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("HEAVY SHOWER", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("LOW TEMP", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("WINTER MIX", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("COASTALSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Tropical Storm",
ifelse(grepl("HIGH WATER", subStormData$EVTYPE,
ignore.case = TRUE), "Flood",
ifelse(grepl("RIP CURRENT", subStormData$EVTYPE,
ignore.case = TRUE), "Rip Current",
ifelse(grepl("TORNDAO", subStormData$EVTYPE,
ignore.case = TRUE), "Tornado",
ifelse(grepl("FREEZING SPRAY", subStormData$EVTYPE,
ignore.case = TRUE), "SLEET",
ifelse(grepl("ICE STORM", subStormData$EVTYPE,
ignore.case = TRUE), "Ice Storm",
ifelse(grepl("ICE PELLETS", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("FLASH FLOODING", subStormData$EVTYPE,
ignore.case = TRUE), "Flash Flood",
ifelse(grepl("RAPIDLY RISING WATER", subStormData$EVTYPE,
ignore.case = TRUE), "Flash Flood",
ifelse(grepl("BEACH EROSIN", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
"Other Event"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
subStormData$EVENT_TYPE <- ifelse(grepl("TORNADO", subStormData$EVTYPE,
ignore.case = TRUE), "Tornado",
ifelse(grepl("TYPHOON", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane(Typhoon)",
ifelse(grepl("HURRICAN", subStormData$EVTYPE,
ignore.case = TRUE), "Hurricane",
ifelse(grepl("TSUNAMI", subStormData$EVTYPE,
ignore.case = TRUE), "Tsunami",
ifelse(grepl("FUNNEL", subStormData$EVTYPE,
ignore.case = TRUE), "Funnel Cloud",
ifelse(grepl("AVALANCHE", subStormData$EVTYPE,
ignore.case = TRUE), "Avalanche",
ifelse(grepl("BLIZZARD", subStormData$EVTYPE,
ignore.case = TRUE), "Blizzard",
ifelse(grepl("MARINE HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Hail",
ifelse(grepl("MARINE HIGH WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine High Wind",
ifelse(grepl("MARINE STRONG WIND", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Strong Wind",
ifelse(grepl("MARUNE THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Marine Thunderstorm Wind",
ifelse(grepl("THUNDERSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("TSTM", subStormData$EVTYPE,
ignore.case = TRUE), "Thunderstorm Wind",
ifelse(grepl("HAIL", subStormData$EVTYPE,
ignore.case = TRUE), "HAIL",
ifelse(grepl("EXTREME COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold/Wind Chill",
ifelse(grepl("EXTREME WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Extreme Cold/Wind Chill",
ifelse(grepl("COLD", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("WIND CHILL", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("FOG", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("FREEZ", subStormData$EVTYPE,
ignore.case = TRUE), "Freezing Fog",
"Dense Fog"),
ifelse(grepl("FLOOD", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lakeshore Flood",
ifelse(grepl("FLASH", subStormData$EVTYPE,
ignore.case = TRUE), "Flash Flood",
ifelse(grepl("COASTAL", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SHORE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
"Flood")))),
ifelse(grepl("FIRE", subStormData$EVTYPE,
ignore.case = TRUE), "Wildfire",
ifelse(grepl("DROUGHT", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("DRY", subStormData$EVTYPE,
ignore.case = TRUE), "Drought",
ifelse(grepl("HEAT", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("EXCESSIVE", subStormData$EVTYPE,
ignore.case = TRUE), "Excessive Heat",
"Heat"),
ifelse(grepl("LIGHTNING", subStormData$EVTYPE,
ignore.case = TRUE), "Lightning",
ifelse(grepl("SNOW", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("LAKE", subStormData$EVTYPE,
ignore.case = TRUE), "Lake-effect Snow",
ifelse(grepl("HEAVY", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Snow",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("ICE", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
"Winter Storm"))))),
ifelse(grepl("HOT", subStormData$EVTYPE,
ignore.case = TRUE), "HEAT",
ifelse(grepl("DUST", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("DEVIL", subStormData$EVTYPE,
ignore.case = TRUE), "Dust Devil",
"Dust Storm"),
ifelse(grepl("FROST", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("FREEZE", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("ICE ROADS", subStormData$EVTYPE,
ignore.case = TRUE), "Frost / Freeze",
ifelse(grepl("SLEET", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("VOLCANIC", subStormData$EVTYPE,
ignore.case = TRUE), "Volcanic Ash",
ifelse(grepl("RAIN", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("WET", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("MICROBURST", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
ifelse(grepl("Wind", subStormData$EVTYPE,
ignore.case = TRUE),
ifelse(grepl("HIGH", subStormData$EVTYPE,
ignore.case = TRUE), "High Wind",
ifelse(grepl("STRONG", subStormData$EVTYPE,
ignore.case = TRUE), "Strong Wind",
"High Wind")),
ifelse(grepl("PRECIPITATION", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("FLD", subStormData$EVTYPE,
ignore.case = TRUE), "Flood",
ifelse(grepl("ASTRONOMICAL LOW TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Astronomical Low Tide",
ifelse(grepl("ASTRONOMICAL HIGH TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Coastal Flood",
ifelse(grepl("SURGE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("TIDE", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("EROSION", subStormData$EVTYPE,
ignore.case = TRUE), "Storm Surge/Tide",
ifelse(grepl("FREEZING DRIZZLE", subStormData$EVTYPE,
ignore.case = TRUE), "Sleet",
ifelse(grepl("HEAVY SHOWER", subStormData$EVTYPE,
ignore.case = TRUE), "Heavy Rain",
ifelse(grepl("LOW TEMP", subStormData$EVTYPE,
ignore.case = TRUE), "Cold/Wind Chill",
ifelse(grepl("WINTER MIX", subStormData$EVTYPE,
ignore.case = TRUE), "Winter Weather",
ifelse(grepl("COASTALSTORM", subStormData$EVTYPE,
ignore.case = TRUE), "Tropical Storm",
"Other Event")))))))))))))))))))))))))))))))))))))))))))))))))
events1 <- subset(subStormData, EVENT_TYPE == "Other Event")
length(events1)
unique(subStormData$EVENT_TYPE)
length(unique(subStormData$EVENT_TYPE))
sub.obs <- length(subStormData$EVENT_TYPE)
sub.obs
other.obs <- length(events1$EVENT_TYPE)
other.obs
View(subStormData)
unique.events <- length(unique(subStormData$EVENT_TYPE))  ## uniqe events in subset
events1 <- subset(subStormData, EVENT_TYPE == "Other Event")  ## Other event dataset
other.obs <- length(events1$EVENT_TYPE)  ## Total observations in 'Other Event' dataset
sub.obs <- length(subStormData$EVENT_TYPE)   ##Total observations in data subset
pct.other <- other.obs / sub.obs    ## Percent of observations captured in 'Other Event'
economic.sum <- aggregate(TTLDMG ~ EVENT_TYPE, data = subStormData,
FUN = function(x) sum=sum(x))
economic.sum <- economic.sum[order(economic.sum$TTLDMG, decreasing = TRUE),]
economic.sum$TTLDMG_M <- round(economic.sum$TTLDMG / 1000000, digits = 2)
economic.sum$DOLLARS <- dollar(economic.sum$TTLDMG_M)
View(economic.sum)
economic.rpt <- select(economic.sum, EVENT_TYPE, DOLLARS)
economic.rpt
View(subStormData)
fatality.sum <- aggregate(FATALITIES ~ EVENT_TYPE, data = subStormData,
FUN = function(x) sum=sum(x))
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = TRUE),]
injury.sum <- aggregate(INJURIES ~ EVENT_TYPE, data = subStormData,
FUN = function(x) sum=sum(x))
injury.sum <- injury.sum[order(fatality.sum$INJURIES, decreasing = TRUE),]
pophlth.sum <- merge(fatality.sum, injury.sum, by = EVENT_TYPE)
fatality.sum <- aggregate(FATALITIES ~ EVENT_TYPE, data = subStormData,
FUN = function(x) sum=sum(x))
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = TRUE),]
injury.sum <- aggregate(INJURIES ~ EVENT_TYPE, data = subStormData,
FUN = function(x) sum=sum(x))
injury.sum <- injury.sum[order(injury.sum$INJURIES, decreasing = TRUE),]
pophlth.sum <- merge(fatality.sum, injury.sum, by = EVENT_TYPE)
View(subStormData)
View(fatality.sum)
View(injury.sum)
pophlth.sum <- merge(fatality.sum, injury.sum, by.x = EVENT_TYPE)
View(injury.sum)
pophlth.sum <- merge(fatality.sum, injury.sum, by.x == "EVENT_TYPE"")
pophlth.sum <- merge(fatality.sum, injury.sum, by.x == "EVENT_TYPE")
pophlth.sum <- merge(fatality.sum, injury.sum, by.x = "EVENT_TYPE")
View(pophlth.sum)
pophlth.sum <- pophlth.sum[order(pophlth.sum$FATALITIES, pophlth.sum$INJURIES),]
View(pophlth.sum)
pophlth.sum <- pophlth.sum[order(pophlth.sum$FATALITIES, pophlth.sum$INJURIES,
decreasing = TRUE),]
View(pophlth.sum)
